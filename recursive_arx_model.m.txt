function y_sim = recursive_arx_model(theta, u, na, nb, nk)
    % RECURSIVE_MODEL_OUTPUT - Recursive calculation of the ARX model output
    % based on previous simulated output values for simulation error assessment.
    %
    % Inputs:
    %   theta - Parameter vector [theta_a; theta_b]
    %   u     - Input signal (N x 1)
    %   na    - Order of the AR part (number of past outputs)
    %   nb    - Order of the X part (number of past inputs)
    %   nk    - Input-output delay (in samples)
    %
    % Outputs:
    %   y_sim - Simulated output (N x 1)

    % Initialization
    N = length(u);          % Number of samples
    y_sim = zeros(N, 1);    % Initialize the simulated output vector with the same size as u

    % Split the theta vector into AR and X parts
    theta_a = theta(1:na);        % Coefficients for past outputs (AR part)
    theta_b = theta(na+1:na+nb);  % Coefficients for past inputs (X part)

    % Recursive calculation of the simulated output
    for t = 1:N
        % AR part: Contribution from past simulated outputs
        y_part = 0;
        for i = 1:na
            if t-i > 0
                y_part = y_part - theta_a(i) * y_sim(t-i);  % Use past simulated outputs
            end
        end

        % X part: Contribution from past inputs
        u_part = 0;
        for j = 1:nb
            if t-nk-j+1 > 0
                u_part = u_part + theta_b(j) * u(t-nk-j+1);
            end
        end

        % Compute the simulated output for the current time step
        y_sim(t) = y_part + u_part;

        % Debug: Print intermediate values
        % disp(['At t = ' num2str(t) ', y_part = ' num2str(y_part) ', u_part = ' num2str(u_part)]);
    end

    % Do not trim y_sim, so that it remains the same size as u and y
end
